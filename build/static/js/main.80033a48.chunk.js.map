{"version":3,"sources":["api/index.js","components/Register.js","components/Login.js","components/Home.js","components/Activities.js","components/routines/Routines.js","components/routines/MakeRoutine.js","components/routines/MyRoutines.js","index.js"],"names":["baseURL","setToken","token","localStorage","setItem","getItem","registerSubmit","username","password","a","fetch","method","headers","body","JSON","stringify","response","json","data","alert","location","reload","console","error","loginSubmit","fetchUserData","Authorization","fetchUserRoutines","createRoutines","routine","fetchAllRoutines","fetchAllActivites","applyActivityToRoutine","routineId","activityIdV","countV","durationV","log","activityId","count","duration","updateRoutineApi","name","goal","payload","newName","prompt","newGoal","updateActivitiesApi","id","newCount","newDuration","deleteActivityApi","deleteRoutineApi","createActivity","activity","Register","props","setIsLoggedIn","useState","setUsername","setPassword","className","onSubmit","event","preventDefault","type","value","onChange","target","placeholder","onClick","to","Login","message","setMessage","Home","Activities","activities","isLoggedIn","setActivities","newActivity","setNewActivity","handleSubmit","required","e","description","map","index","Routines","grabbedRoutines","setGrabbedRoutines","getAllRoutines","routines","useEffect","creatorName","activity1","MakeRoutine","setDisplayMessage","setIsShown","newRoutine","setNewRoutine","finished","setFinished","isPublic","MyRoutines","currentUser","userRoutines","setUserRoutines","setActivityId","durationCount","setDurationCount","setRoutineId","hack","setHack","handleSubmitUpdateRoutine","handleSubmitDeleteRoutine","handleSubmitDeleteActivity","handleSubmitUpdateActivities","getUserRoutines","routineActivityId","min","App","setCurrentUser","grabActivities","removeItem","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80033a48.chunk.js","sourcesContent":["const baseURL = \"https://fitnesstrac-kr.herokuapp.com/api/\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const clearToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport const setToken = (token) => {\r\n  localStorage.setItem(\"token\", token);\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nconst token = getToken();\r\n\r\nexport const registerSubmit = async (username, password) => {\r\n  let url = \"https://fitnesstrac-kr.herokuapp.com/api/users/register\";\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.token) {\r\n      alert(\"You have successfully registered!\");\r\n      setToken(data.token);\r\n      location.reload();\r\n      {\r\n        localStorage.getItem(\"token\") ? <Redirect to=\"/\" /> : null;\r\n      }\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error Message:\", error);\r\n  }\r\n};\r\n\r\nexport const loginSubmit = async (username, password) => {\r\n  let url = \"https://fitnesstrac-kr.herokuapp.com/api/users/login\";\r\n\r\n  try {\r\n    const response = await fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        username: username,\r\n        password: password,\r\n      }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    if (data.token) {\r\n      alert(\"You have successfully logged in!\");\r\n      setToken(data.token);\r\n    }\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error Message:\", error);\r\n  } finally {\r\n    <Redirect to=\"/\" />;\r\n    location.reload();\r\n  }\r\n};\r\n\r\nexport const fetchUserData = async () => {\r\n  try {\r\n    const response = await fetch(`${baseURL}users/me`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const fetchUserRoutines = async (username) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}users/${username}/routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const createRoutines = async (routine) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}routines`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(routine),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const fetchAllRoutines = async () => {\r\n  try {\r\n    const response = await fetch(`${baseURL}routines`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const fetchAllActivites = async () => {\r\n  try {\r\n    const response = await fetch(`${baseURL}activities`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const applyActivityToRoutine = async (\r\n  routineId,\r\n  activityIdV,\r\n  countV,\r\n  durationV\r\n) => {\r\n  console.log(activityIdV, countV, durationV);\r\n  try {\r\n    const response = await fetch(`${baseURL}routines/${routineId}/activities`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        activityId: activityIdV,\r\n        count: countV,\r\n        duration: durationV,\r\n      }),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const updateRoutineApi = async (name, goal, routineId) => {\r\n  let payload = {};\r\n  console.log(goal);\r\n  console.log(routineId);\r\n  console.log(name);\r\n  let newName = prompt(\"What would you like to change the name to?\", name);\r\n  let newGoal = prompt(\"What would you like to change the goal to?\", goal);\r\n  if (newName) {\r\n    payload.name = newName;\r\n  }\r\n  if (newGoal) {\r\n    payload.goal = newGoal;\r\n  }\r\n  console.log(routineId);\r\n  try {\r\n    const response = await fetch(`${baseURL}routines/${routineId}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const updateActivitiesApi = async (id, count, duration) => {\r\n  let payload = {};\r\n  console.log(id);\r\n  console.log(count);\r\n  console.log(duration);\r\n  let newCount = prompt(\"What would you like to change the count?\", count);\r\n  let newDuration = prompt(\r\n    \"What would you like to change the duration?\",\r\n    duration\r\n  );\r\n  payload = { count: newCount, duration: newDuration };\r\n  console.log(payload);\r\n  try {\r\n    const response = await fetch(`${baseURL}/routine_activities/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const deleteActivityApi = async (id) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}/routine_activities/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const deleteRoutineApi = async (id) => {\r\n  console.log(id);\r\n  console.log(token);\r\n  try {\r\n    const response = await fetch(`${baseURL}/routines/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\nexport const createActivity = async (activity) => {\r\n  try {\r\n    const response = await fetch(`${baseURL}activities`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(activity),\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const fetchRoutinesByActivity = async (activityId) => {\r\n  try {\r\n    const response = await fetch(\r\n      `${baseURL}activities/${activityId}/routines`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { registerSubmit } from \"../api\";\r\n\r\nconst Register = (props) => {\r\n  const { setIsLoggedIn } = props;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <form className=\"register\" onSubmit={(event) => event.preventDefault()}>\r\n      <h1>Register:</h1>\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={(event) => setUsername(event.target.value)}\r\n        placeholder=\"\"\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        placeholder=\"\"\r\n      />\r\n      <button\r\n        onClick={async (event) => {\r\n          event.preventDefault();\r\n          try {\r\n            let submit = await registerSubmit(username, password);\r\n\r\n            if (submit.error) {\r\n              alert(\"There was an error registering...\");\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }}\r\n      >\r\n        Register\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { loginSubmit } from \"../api\";\r\n\r\nconst Login = (props) => {\r\n  const { setIsLoggedIn, message, setMessage } = props;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <form className=\"login\" onSubmit={(event) => event.preventDefault()}>\r\n      <h1>Login:</h1>\r\n      <label>Username:</label>\r\n      <input\r\n        type=\"text\"\r\n        value={username}\r\n        onChange={(event) => setUsername(event.target.value)}\r\n        placeholder=\"\"\r\n      />\r\n      <label>Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(event) => setPassword(event.target.value)}\r\n        placeholder=\"\"\r\n      />\r\n      <button\r\n        onClick={async (event) => {\r\n          event.preventDefault();\r\n          try {\r\n            let submit = await loginSubmit(username, password);\r\n\r\n            if (submit.error) {\r\n              alert(\"There was an error logging in...\");\r\n            } else {\r\n              return <Redirect to=\"/\" />;\r\n            }\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n        }}\r\n      >\r\n        Login\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","const Home = () => {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Fitness Tracker</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { fetchAllActivites, createActivity } from \"../api\";\r\n\r\nconst Activities = ({ activities, isLoggedIn, setActivities }) => {\r\n  const [newActivity, setNewActivity] = useState();\r\n\r\n  const handleSubmit = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const response = await createActivity(newActivity);\r\n      console.log(response);\r\n      if (response.id) {\r\n        alert(\"sucess creating activity\");\r\n        setActivities(await fetchAllActivites());\r\n      } else {\r\n        return alert(response.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isLoggedIn ? (\r\n        <form onSubmit={handleSubmit}>\r\n          <h2>Create an Activity:</h2>\r\n          <label>Activity Name:</label>\r\n          <input\r\n            name=\"Name\"\r\n            required\r\n            onChange={(event) =>\r\n              setNewActivity({ ...newActivity, name: event.target.value })\r\n            }\r\n          />\r\n          <label>Description:</label>\r\n          <input\r\n            type=\"Description\"\r\n            required\r\n            onChange={(e) =>\r\n              setNewActivity({ ...newActivity, description: e.target.value })\r\n            }\r\n          />\r\n          <button type=\"submit\">submit</button>\r\n        </form>\r\n      ) : null}\r\n\r\n      <h1>Activities</h1>\r\n      {activities?.map((activity, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <h2>Activity: {activity.name}</h2>\r\n            <span>Description:</span>\r\n            <span>{activity.description}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Activities;\r\n","import { useState, useEffect } from \"react\";\r\nimport { fetchAllRoutines } from \"../../api\";\r\n\r\nconst Routines = () => {\r\n  const [grabbedRoutines, setGrabbedRoutines] = useState();\r\n\r\n  const getAllRoutines = async () => {\r\n    try {\r\n      const routines = await fetchAllRoutines();\r\n      setGrabbedRoutines(routines);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(getAllRoutines, []);\r\n  return (\r\n    <div>\r\n      <h1>Welcome to Routines</h1>\r\n      <div className=\"results\">\r\n        {grabbedRoutines?.map((routine, index) => {\r\n          return (\r\n            <div className=\"listing\" key={index}>\r\n              <hr></hr>\r\n              <h2>Routine:{routine.name}</h2>\r\n              <h3>Created by {routine.creatorName}</h3>\r\n              <h4>Goal:{routine.goal}</h4>\r\n\r\n              {routine.activities[0] ? (\r\n                routine.activities.map((activity1, index) => {\r\n                  return (\r\n                    <h6 key={index}>\r\n                      <ul>\r\n                        <li>Activity: {activity1.name}</li>\r\n                        <li>Description: {activity1.description}</li>\r\n                        <li>Duration:{activity1.duration}</li>\r\n                        <li>Count:{activity1.count}</li>\r\n                      </ul>\r\n                    </h6>\r\n                  );\r\n                })\r\n              ) : (\r\n                <b>No activities have been added to this routine</b>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routines;\r\n","import { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport { createRoutines } from \"../../api\";\r\n\r\nconst MakeRoutine = ({ setDisplayMessage, setIsShown, isLoggedIn }) => {\r\n  const [newRoutine, setNewRoutine] = useState();\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const [name, goal] = event.target;\r\n\r\n    if (name.value && goal.value) {\r\n      const newRoutine = {\r\n        name: name.value,\r\n        goal: goal.value,\r\n        isPublic: true,\r\n      };\r\n      setNewRoutine(newRoutine);\r\n    } else {\r\n      alert(\"Make sure all fields are filled in...\");\r\n    }\r\n  };\r\n\r\n  useEffect(async () => {\r\n    if (newRoutine) {\r\n      try {\r\n        const response = await createRoutines(newRoutine);\r\n        console.log(response);\r\n        setFinished(true);\r\n        alert(\"Sucessfully Created a Routine!\");\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        <Redirect to=\"/myroutines\" />;\r\n      }\r\n    }\r\n  }, [newRoutine]);\r\n\r\n  if (finished) {\r\n    return <Redirect to=\"/\" />;\r\n  } else {\r\n    return (\r\n      <div className=\"makeRoutine\">\r\n        <h2>Create a Routine:</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" placeholder=\"Name\" />\r\n          </div>\r\n          <div>\r\n            <label>Goal</label>\r\n            <input type=\"text\" placeholder=\"Goal\" />\r\n          </div>\r\n          <button className=\"submitButton\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MakeRoutine;\r\n","import { Redirect, Link } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  fetchUserRoutines,\r\n  applyActivityToRoutine,\r\n  updateRoutineApi,\r\n  deleteActivityApi,\r\n  updateActivitiesApi,\r\n  deleteRoutineApi,\r\n} from \"../../api\";\r\n\r\nconst MyRoutines = ({ currentUser, activities }) => {\r\n  const [userRoutines, setUserRoutines] = useState();\r\n  const [activityId, setActivityId] = useState();\r\n  const [durationCount, setDurationCount] = useState();\r\n  const [routineId, setRoutineId] = useState();\r\n  const [hack, setHack] = useState(1);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { duration, count } = durationCount;\r\n\r\n    try {\r\n      const response = await applyActivityToRoutine(\r\n        routineId,\r\n        activityId,\r\n        count,\r\n        duration\r\n      );\r\n      console.log(response);\r\n      if (!response.id) {\r\n        return alert(\"Something went wrong\");\r\n      }\r\n      setRoutineId(null);\r\n      setDurationCount(null);\r\n      setActivityId(null);\r\n      setHack(hack + 1);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitUpdateRoutine = async (name, goal, id) => {\r\n    try {\r\n      const routines = await updateRoutineApi(name, goal, id);\r\n      location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitDeleteRoutine = async (id) => {\r\n    try {\r\n      const routines = await deleteRoutineApi(id);\r\n      location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitDeleteActivity = async (id) => {\r\n    console.log(id);\r\n    try {\r\n      const activity = await deleteActivityApi(id);\r\n      location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSubmitUpdateActivities = async (routineId, count, duration) => {\r\n    try {\r\n      const routines = await updateActivitiesApi(routineId, count, duration);\r\n      location.reload();\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const getUserRoutines = async () => {\r\n    if (!currentUser || !activities) {\r\n      return;\r\n    }\r\n    try {\r\n      const routines = await fetchUserRoutines(currentUser);\r\n      setUserRoutines(routines);\r\n      console.log(routines);\r\n      console.log(activities);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(getUserRoutines, [currentUser, activities, hack]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome {currentUser}</h1>\r\n      <Link className=\"MakeRoutineLink\" to=\"/createRoutine\">\r\n        Create a Routine\r\n      </Link>\r\n      {userRoutines ? (\r\n        userRoutines?.map((routine, index) => {\r\n          // ADD ACTIVITIES\r\n          return (\r\n            <div key={index}>\r\n              <h2>{routine.name}</h2>\r\n              <h3>{routine.goal}</h3>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() =>\r\n                    handleSubmitUpdateRoutine(\r\n                      routine.name,\r\n                      routine.goal,\r\n                      routine.id\r\n                    )\r\n                  }\r\n                >\r\n                  Update Routine Name or Goal\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => handleSubmitDeleteRoutine(routine.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n\r\n              {routine.activities[0] ? (\r\n                routine.activities.map((activity, index) => {\r\n                  return (\r\n                    <ul key={index}>\r\n                      <li>Activity: {activity.name}</li>\r\n                      <li>ID: {activity.routineActivityId}</li>\r\n                      <li>Description: {activity.description}</li>\r\n                      <li>Duration:{activity.duration}</li>\r\n                      <li>Count:{activity.count} </li>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          handleSubmitUpdateActivities(\r\n                            activity.routineActivityId,\r\n                            activity.duration,\r\n                            activity.count\r\n                          )\r\n                        }\r\n                      >\r\n                        Update\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() =>\r\n                          handleSubmitDeleteActivity(activity.routineActivityId)\r\n                        }\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </ul>\r\n                  );\r\n                })\r\n              ) : (\r\n                <div>No activities have been added to this routine</div>\r\n              )}\r\n              <form onSubmit={handleSubmit}>\r\n                <label>Add Activity to this Routine</label>\r\n                <select\r\n                  name=\"Activities\"\r\n                  id=\"select-activity\"\r\n                  value={activityId}\r\n                  onChange={(event) => {\r\n                    setRoutineId(routine.id);\r\n                    setActivityId(event.target.value);\r\n                    return;\r\n                  }}\r\n                >\r\n                  <option value=\"null\">Select an activity to add</option>\r\n                  {activities.map((activity, index) => {\r\n                    return (\r\n                      <option key={index} value={activity.id}>\r\n                        {activity.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n                <div>\r\n                  <label>Count</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    placeholder=\"Count\"\r\n                    onChange={(e) =>\r\n                      setDurationCount({\r\n                        ...durationCount,\r\n                        count: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label>Duration</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    placeholder=\"Duration\"\r\n                    onChange={(e) =>\r\n                      setDurationCount({\r\n                        ...durationCount,\r\n                        duration: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n                <button className=\"submitButton\" type=\"submit\">\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <h2>Looks like you don't have any routines</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRoutines;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { clearToken, fetchUserData, getToken, fetchAllActivites } from \"./api\";\r\n\r\nimport {\r\n  Login,\r\n  Register,\r\n  Home,\r\n  Activities,\r\n  Routines,\r\n  MakeRoutine,\r\n  MyRoutines,\r\n} from \"./components\";\r\n\r\nconst App = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [user, setUser] = useState({});\r\n  const [activities, setActivities] = useState(null);\r\n  const [authorized, setAuthorized] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"token\")) {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, [setIsLoggedIn]);\r\n\r\n  useEffect(async () => {\r\n    if (isLoggedIn) {\r\n      try {\r\n        const data = await fetchUserData();\r\n        setCurrentUser(data.username);\r\n        const grabActivities = await fetchAllActivites();\r\n        setActivities(grabActivities);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"headerbar\">\r\n        <h1>Fitness Tracker</h1>\r\n        <div>\r\n          <Link className=\"navlink\" to=\"/\">\r\n            Home\r\n          </Link>\r\n          <Link className=\"navlink\" to=\"/activities\">\r\n            Activities\r\n          </Link>\r\n          <Link className=\"navlink\" to=\"/routines\">\r\n            Routines\r\n          </Link>\r\n          {isLoggedIn ? (\r\n            <Link className=\"Link\" to=\"/createRoutine\">\r\n              Create Routine\r\n            </Link>\r\n          ) : null}\r\n          {isLoggedIn ? (\r\n            <Link className=\"Link\" to=\"/myroutines\">\r\n              My Routines\r\n            </Link>\r\n          ) : null}\r\n          {!isLoggedIn ? (\r\n            <Link className=\"navlink\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          ) : null}\r\n          {!isLoggedIn ? (\r\n            <Link className=\"navlink\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          ) : null}{\" \"}\r\n          {isLoggedIn ? (\r\n            <Link\r\n              className=\"Link\"\r\n              onClick={() => {\r\n                clearToken();\r\n                setIsLoggedIn(false);\r\n                alert(\"You have logged out\");\r\n              }}\r\n              to=\"/\"\r\n            >\r\n              Log Out\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n      <main>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            <Register isLoggedIn={isLoggedIn} setIsLoggedIn={setIsLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/activities\">\r\n            <Activities\r\n              isLoggedIn={isLoggedIn}\r\n              currentUser={currentUser}\r\n              activities={activities}\r\n              setActivities={setActivities}\r\n            />\r\n          </Route>\r\n          <Route path=\"/routines\">\r\n            <Routines />\r\n          </Route>\r\n          <Route path=\"/myRoutines\">\r\n            <MyRoutines\r\n              currentUser={currentUser}\r\n              activities={activities}\r\n              setActivities={setActivities}\r\n            />\r\n          </Route>\r\n          <Route path=\"/createRoutine\">\r\n            <MakeRoutine />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}